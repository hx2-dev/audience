CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";
CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";
CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TABLE IF NOT EXISTS "public"."hx2-audience_activity" (
    "id" bigint NOT NULL,
    "eventId" "uuid" NOT NULL,
    "name" character varying(256) NOT NULL,
    "type" character varying(50) NOT NULL,
    "data" "jsonb" NOT NULL,
    "order" integer DEFAULT 0 NOT NULL,
    "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updatedBy" "uuid" NOT NULL,
    "deleted" timestamp with time zone
);


ALTER TABLE "public"."hx2-audience_activity" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."hx2-audience_activity_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."hx2-audience_activity_response" (
    "id" bigint NOT NULL,
    "activityId" bigint NOT NULL,
    "userId" "uuid" NOT NULL,
    "response" "jsonb" NOT NULL,
    "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

ALTER TABLE "public"."hx2-audience_activity_response" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."hx2-audience_activity_response_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."hx2-audience_event" (
    "id" "uuid" DEFAULT gen_random_uuid() NOT NULL,
    "shortId" character varying(6),
    "creatorId" "uuid" NOT NULL,
    "title" character varying(256) NOT NULL,
    "description" "text",
    "start" timestamp with time zone NOT NULL,
    "end" timestamp with time zone NOT NULL,
    "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updatedBy" "uuid" NOT NULL,
    "deleted" timestamp with time zone
);

CREATE TABLE IF NOT EXISTS "public"."hx2-audience_presenter_state" (
    "eventId" "uuid" NOT NULL,
    "currentPage" character varying(256) NOT NULL,
    "data" "jsonb",
    "updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS "public"."hx2-audience_question" (
    "id" bigint NOT NULL,
    "eventId" "uuid" NOT NULL,
    "question" "text" NOT NULL,
    "submitterName" character varying(256),
    "submitterUserId" "uuid",
    "isAnonymous" boolean DEFAULT false NOT NULL,
    "isAnswered" boolean DEFAULT false NOT NULL,
    "answer" "text",
    "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updatedBy" "uuid" NOT NULL,
    "deleted" timestamp with time zone
);

ALTER TABLE "public"."hx2-audience_question" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."hx2-audience_question_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."hx2-audience_activity"
    ADD CONSTRAINT "hx2-audience_activity_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."hx2-audience_activity_response"
    ADD CONSTRAINT "hx2-audience_activity_response_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."hx2-audience_event"
    ADD CONSTRAINT "hx2-audience_event_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."hx2-audience_event"
    ADD CONSTRAINT "hx2-audience_event_shortId_unique" UNIQUE ("shortId");

ALTER TABLE ONLY "public"."hx2-audience_presenter_state"
    ADD CONSTRAINT "hx2-audience_presenter_state_pkey" PRIMARY KEY ("eventId");

ALTER TABLE ONLY "public"."hx2-audience_question"
    ADD CONSTRAINT "hx2-audience_question_pkey" PRIMARY KEY ("id");

-- Create indexes for performance
CREATE INDEX IF NOT EXISTS "idx_hx2-audience_activity_eventId" ON "public"."hx2-audience_activity" ("eventId");
CREATE INDEX IF NOT EXISTS "idx_hx2-audience_activity_deleted" ON "public"."hx2-audience_activity" ("deleted");
CREATE INDEX IF NOT EXISTS "idx_hx2-audience_activity_order" ON "public"."hx2-audience_activity" ("order");

CREATE INDEX IF NOT EXISTS "idx_hx2-audience_activity_response_activityId" ON "public"."hx2-audience_activity_response" ("activityId");
CREATE INDEX IF NOT EXISTS "idx_hx2-audience_activity_response_userId" ON "public"."hx2-audience_activity_response" ("userId");

CREATE INDEX IF NOT EXISTS "idx_hx2-audience_event_creatorId" ON "public"."hx2-audience_event" ("creatorId");
CREATE INDEX IF NOT EXISTS "idx_hx2-audience_event_deleted" ON "public"."hx2-audience_event" ("deleted");
CREATE INDEX IF NOT EXISTS "idx_hx2-audience_event_start_end" ON "public"."hx2-audience_event" ("start", "end");

CREATE INDEX IF NOT EXISTS "idx_hx2-audience_question_eventId" ON "public"."hx2-audience_question" ("eventId");
CREATE INDEX IF NOT EXISTS "idx_hx2-audience_question_submitterUserId" ON "public"."hx2-audience_question" ("submitterUserId");
CREATE INDEX IF NOT EXISTS "idx_hx2-audience_question_deleted" ON "public"."hx2-audience_question" ("deleted");
CREATE INDEX IF NOT EXISTS "idx_hx2-audience_question_isAnswered" ON "public"."hx2-audience_question" ("isAnswered");