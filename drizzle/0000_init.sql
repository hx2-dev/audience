CREATE TABLE "hx2-audience_account" (
	"userId" varchar(255) NOT NULL,
	"type" varchar(255) NOT NULL,
	"provider" varchar(255) NOT NULL,
	"providerAccountId" varchar(255) NOT NULL,
	"refresh_token" text,
	"access_token" text,
	"expires_at" integer,
	"token_type" varchar(255),
	"scope" varchar(255),
	"id_token" text,
	"session_state" varchar(255),
	CONSTRAINT "hx2-audience_account_provider_providerAccountId_pk" PRIMARY KEY("provider","providerAccountId")
);
--> statement-breakpoint
CREATE TABLE "hx2-audience_activity" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "hx2-audience_activity_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"eventId" uuid NOT NULL,
	"name" varchar(256) NOT NULL,
	"type" varchar(50) NOT NULL,
	"data" jsonb NOT NULL,
	"order" integer DEFAULT 0 NOT NULL,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedBy" varchar(255) NOT NULL,
	"deleted" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "hx2-audience_activity_response" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "hx2-audience_activity_response_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"activityId" bigint NOT NULL,
	"userId" varchar(255) NOT NULL,
	"response" jsonb NOT NULL,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "hx2-audience_event" (
	"id" uuid PRIMARY KEY NOT NULL,
	"shortId" varchar(6),
	"creatorId" varchar(255) NOT NULL,
	"title" varchar(256) NOT NULL,
	"description" text,
	"start" timestamp with time zone NOT NULL,
	"end" timestamp with time zone NOT NULL,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedBy" varchar(255) NOT NULL,
	"deleted" timestamp with time zone,
	CONSTRAINT "hx2-audience_event_shortId_unique" UNIQUE("shortId")
);
--> statement-breakpoint
CREATE TABLE "hx2-audience_presenter_state" (
	"eventId" uuid PRIMARY KEY NOT NULL,
	"currentPage" varchar(256) NOT NULL,
	"data" jsonb,
	"updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "hx2-audience_question" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "hx2-audience_question_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"eventId" uuid NOT NULL,
	"question" text NOT NULL,
	"submitterName" varchar(256),
	"submitterUserId" varchar(255),
	"isAnonymous" boolean DEFAULT false NOT NULL,
	"isAnswered" boolean DEFAULT false NOT NULL,
	"answer" text,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedBy" varchar(255) NOT NULL,
	"deleted" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "hx2-audience_session" (
	"sessionToken" varchar(255) PRIMARY KEY NOT NULL,
	"userId" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE "hx2-audience_user" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"name" varchar(255),
	"email" varchar(255) NOT NULL,
	"emailVerified" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"image" varchar(255)
);
--> statement-breakpoint
CREATE TABLE "hx2-audience_verification_token" (
	"identifier" varchar(255) NOT NULL,
	"token" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL,
	CONSTRAINT "hx2-audience_verification_token_identifier_token_pk" PRIMARY KEY("identifier","token")
);
--> statement-breakpoint
ALTER TABLE "hx2-audience_account" ADD CONSTRAINT "hx2-audience_account_userId_hx2-audience_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."hx2-audience_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hx2-audience_activity" ADD CONSTRAINT "hx2-audience_activity_eventId_hx2-audience_event_id_fk" FOREIGN KEY ("eventId") REFERENCES "public"."hx2-audience_event"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hx2-audience_activity" ADD CONSTRAINT "hx2-audience_activity_updatedBy_hx2-audience_user_id_fk" FOREIGN KEY ("updatedBy") REFERENCES "public"."hx2-audience_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hx2-audience_activity_response" ADD CONSTRAINT "hx2-audience_activity_response_activityId_hx2-audience_activity_id_fk" FOREIGN KEY ("activityId") REFERENCES "public"."hx2-audience_activity"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hx2-audience_activity_response" ADD CONSTRAINT "hx2-audience_activity_response_userId_hx2-audience_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."hx2-audience_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hx2-audience_event" ADD CONSTRAINT "hx2-audience_event_creatorId_hx2-audience_user_id_fk" FOREIGN KEY ("creatorId") REFERENCES "public"."hx2-audience_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hx2-audience_event" ADD CONSTRAINT "hx2-audience_event_updatedBy_hx2-audience_user_id_fk" FOREIGN KEY ("updatedBy") REFERENCES "public"."hx2-audience_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hx2-audience_presenter_state" ADD CONSTRAINT "hx2-audience_presenter_state_eventId_hx2-audience_event_id_fk" FOREIGN KEY ("eventId") REFERENCES "public"."hx2-audience_event"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hx2-audience_question" ADD CONSTRAINT "hx2-audience_question_eventId_hx2-audience_event_id_fk" FOREIGN KEY ("eventId") REFERENCES "public"."hx2-audience_event"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hx2-audience_question" ADD CONSTRAINT "hx2-audience_question_submitterUserId_hx2-audience_user_id_fk" FOREIGN KEY ("submitterUserId") REFERENCES "public"."hx2-audience_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hx2-audience_question" ADD CONSTRAINT "hx2-audience_question_updatedBy_hx2-audience_user_id_fk" FOREIGN KEY ("updatedBy") REFERENCES "public"."hx2-audience_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hx2-audience_session" ADD CONSTRAINT "hx2-audience_session_userId_hx2-audience_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."hx2-audience_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "account_user_id_idx" ON "hx2-audience_account" USING btree ("userId");--> statement-breakpoint
CREATE INDEX "activity_event_id_idx" ON "hx2-audience_activity" USING btree ("eventId");--> statement-breakpoint
CREATE INDEX "activity_order_idx" ON "hx2-audience_activity" USING btree ("eventId","order");--> statement-breakpoint
CREATE INDEX "activity_response_activity_id_idx" ON "hx2-audience_activity_response" USING btree ("activityId");--> statement-breakpoint
CREATE INDEX "activity_response_user_id_idx" ON "hx2-audience_activity_response" USING btree ("userId");--> statement-breakpoint
CREATE UNIQUE INDEX "unique_user_activity_response" ON "hx2-audience_activity_response" USING btree ("userId","activityId");--> statement-breakpoint
CREATE INDEX "creator_id_idx" ON "hx2-audience_event" USING btree ("creatorId");--> statement-breakpoint
CREATE INDEX "short_id_idx" ON "hx2-audience_event" USING btree ("shortId");--> statement-breakpoint
CREATE INDEX "presenter_state_event_id_idx" ON "hx2-audience_presenter_state" USING btree ("eventId");--> statement-breakpoint
CREATE INDEX "question_event_id_idx" ON "hx2-audience_question" USING btree ("eventId");--> statement-breakpoint
CREATE INDEX "question_created_at_idx" ON "hx2-audience_question" USING btree ("createdAt");--> statement-breakpoint
CREATE INDEX "t_user_id_idx" ON "hx2-audience_session" USING btree ("userId");